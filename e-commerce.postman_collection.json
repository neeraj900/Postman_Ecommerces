{
	"info": {
		"_postman_id": "68422464-3888-4322-a6c5-1afda8076ae7",
		"name": "e-commerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23215493"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "user resgiration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"purohitrohan91@gmail.com\",\r\n\"password\": \"onepiece@07\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/user/signup",
							"host": [
								"{{base url}}"
							],
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "user login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"tokenkey\", jsonData.accessToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"purohitrohan90@gmail.com\",\r\n\"password\": \"onepiece@07\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/user/login",
							"host": [
								"{{base url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"const num = jsonData.count;\r",
									"console.log (num)\r",
									"\r",
									"for(var i=0;i<num;i++)\r",
									"{\r",
									"    if(jsonData.users[i].email==\"rk81909@gmail.com\")\r",
									"    {\r",
									"        var userid = jsonData.users[i]._id;\r",
									"        //console.log (userid)\r",
									"        var deleted_email = jsonData.users[i].email;\r",
									"        //console.log (deleted_email)\r",
									"        pm.environment.set(\"userid\", userid);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/user",
							"host": [
								"{{base url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/user/62836cab316ed800174d04ff",
							"host": [
								"{{base url}}"
							],
							"path": [
								"user",
								"62836cab316ed800174d04ff"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "product",
			"item": [
				{
					"name": "all product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"const num = jsonData.count;\r",
									"console.log (num)\r",
									"\r",
									"for(var i=0;i<num;i++)\r",
									"{\r",
									"    if(jsonData.products[i].name==\"iphone\")\r",
									"    {\r",
									"        var productid = jsonData.products[i]._id;\r",
									"        console.log (productid)\r",
									"        var price = jsonData.products[i].price;\r",
									"        console.log (price)\r",
									"        pm.environment.set(\"productsid\", productid);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/products",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "create product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"watch\",\r\n\"price\": 5000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/products",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "all product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/products/631b05f231ff50001788069d",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products",
								"631b05f231ff50001788069d"
							]
						}
					},
					"response": []
				},
				{
					"name": "update product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"earphone\",\r\n\"price\": 8000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/products/631b05f231ff50001788069d",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products",
								"631b05f231ff50001788069d"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/products/631b05f231ff50001788069d",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products",
								"631b05f231ff50001788069d"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "order",
			"item": [
				{
					"name": "all order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"let Oid,name;\r",
									"const count = jsonData.count;\r",
									"console.log (count)\r",
									"for(let i=0;i<count;i++)\r",
									"{\r",
									"    if (jsonData.orders[i].product!=null)\r",
									"    {\r",
									"        name = jsonData.orders[i].product.name;\r",
									"         if (name==\"laptop office use\")\r",
									"             {\r",
									"                Oid = jsonData.orders[i]._id;\r",
									"                console.log (Oid)\r",
									"                 console.log (name)\r",
									"                pm.environment.set(\"Orderid\", Oid);\r",
									"             }\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/orders",
							"host": [
								"{{base url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "create order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"product\":\"62e22e375d24370017ac2eff\", \r\n\"quantity\": 80\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/orders",
							"host": [
								"{{base url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "order by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/orders/631ad78031ff50001788065d",
							"host": [
								"{{base url}}"
							],
							"path": [
								"orders",
								"631ad78031ff50001788065d"
							]
						}
					},
					"response": []
				},
				{
					"name": "update order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"product\": \"631ad78031ff50001788065d\", \r\n\"quantity\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/orders/631ad78031ff50001788065d",
							"host": [
								"{{base url}}"
							],
							"path": [
								"orders",
								"631ad78031ff50001788065d"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenkey}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/orders/{{Orderid}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"orders",
								"{{Orderid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}